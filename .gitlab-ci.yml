image: docker:latest
services:
    - docker:dind
    
stages:
  - build
  - deploy

before_script:
  - sed -i -e 's/v[[:digit:]]\.[[:digit:]]/edge/g' /etc/apk/repositories
  - apk upgrade --update-cache --available
  - apk --no-cache add git gzip gcc musl-dev tree

build:
  stage: build
  script:
    - export GOPATH=/goSrc
    - export PATH=$PATH:/goSrc/bin
    - mkdir -p /goSrc/src/github.com/Toyz
    - cp -r /builds/Toyz/GlitchyImageService /goSrc/src/github.com/Toyz
    - cd /goSrc/src/github.com/Toyz/GlitchyImageService
    - apk --no-cache add go
    - go get -u github.com/golang/dep/cmd/dep
    - update-ca-certificates
    - cp /etc/ssl/certs/ca-certificates.crt ca-certificates.crt 
    - dep ensure
    - CGO_ENABLED=0 GOOS=linux go build  -ldflags '-w -s' -a -installsuffix cgo -o pw
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - docker build --pull -t "$CI_REGISTRY_IMAGE:staging" .
    - docker push "$CI_REGISTRY_IMAGE:staging"
deploy-live:
  stage: deploy
  script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - docker pull "$CI_REGISTRY_IMAGE:staging"
    - docker tag "$CI_REGISTRY_IMAGE:staging" "$CI_REGISTRY_IMAGE:latest"
    - docker push "$CI_REGISTRY_IMAGE:latest"
  only:
    - master